[[model]]
author: Cellml converter
desc: Grandi et al. 2011 atrial action potential and Ca2+ model.
name: grandi_2011_atrial
# Initial values
buffca.CaM    =  7.02128101897185673e-4
buffca.Myoc   =  3.94923428392655786e-3
buffca.Myom   =  1.35538532457244482e-1
buffca.SLH_jn =  1.03674364292988680e-1
buffca.SLH_sl =  1.90759804527589089e-1
buffca.SLL_jn =  1.35640688636079511e-2
buffca.SLL_sl =  2.14063418881809235e-2
buffca.SRB    =  4.45327242854324807e-3
buffca.TnCHc  =  1.27856586024588575e-1
buffca.TnCHm  =  5.69999505293381902e-3
buffca.TnCL   =  1.83143535034222225e-2
buffna.NaB_jn =  3.61396062660070427
buffna.NaB_sl =  7.88607791910409195e-1
calcium.Ca_i  =  2.10808768153058460e-4
calcium.Ca_jn =  3.25814677291117296e-4
calcium.Ca_sl =  2.33018340557575125e-4
calcium.Ca_sr =  5.02305826642838293e-1
calcium.Csqn  =  1.13337536953687845
ical.d        =  2.16850216379767157e-5
ical.f        =  9.98384427312367095e-1
ical.fCaB_jn  =  4.49572164109603364e-2
ical.fCaB_sl  =  3.28512098597005947e-2
ikr.xr        =  1.31290096227093382e-3
iks.xs        =  7.49436760722081534e-3
ikur.ikur_r   =  3.93548562883350357e-4
ikur.s        =  9.58234428284286399e-1
ina.h         =  3.15482710277587786e-1
ina.j         =  2.48034071360795916e-1
ina.m         =  1.89326933812916480e-2
inal.hl       =  3.79829335413739144e-2
inal.ml       =  1.01974216400706526e-2
ito.x         =  1.37939236359928058e-3
ito.y         =  9.45874848392074696e-1
membrane.V    = -7.34336366728778671e1
potassium.K_i = 120
ryr.i         =  5.01323282772066123e-7
ryr.o         =  2.01567245823636694e-6
ryr.ryr_r     =  8.00819151705148946e-1
sodium.Na_i   =  9.15199678386256998
sodium.Na_jn  =  9.15153381546177336
sodium.Na_sl  =  9.15182798281732346

[buffca]
Bmax_CaM = 0.024
    in [mM]
Bmax_SLhighj = 0.00165 [mM] * geom.Vmyo / geom.Vjn * 0.1
    in [mM]
Bmax_SLhighsl = geom.Vmyo / geom.Vsl * 0.0134 [mM]
    in [mM]
Bmax_SLlowj = 0.0046 [mM] * geom.Vmyo / geom.Vjn * 0.1
    in [mM]
Bmax_SLlowsl = geom.Vmyo / geom.Vsl * 0.0374 [mM]
    in [mM]
Bmax_SR = 0.0171
    in [mM]
Bmax_TnChigh = 0.14
    in [mM]
Bmax_TnClow = 0.07
    in [mM]
Bmax_myosin = 0.14
    in [mM]
dot(CaM) = kon_cam * calcium.Ca_i * (Bmax_CaM - CaM) - koff_cam * CaM
    in [mM]
J_CaB_cytosol = dot(TnCL) + dot(TnCHc) + dot(TnCHm) + dot(CaM) + dot(Myoc) + dot(Myom) + dot(SRB)
    in [mM/ms]
J_CaB_jntion = dot(SLL_jn) + dot(SLH_jn)
    in [mM/ms]
J_CaB_sl = dot(SLL_sl) + dot(SLH_sl)
    in [mM/ms]
dot(Myoc) = kon_myoca * calcium.Ca_i * (Bmax_myosin - Myoc - Myom) - koff_myoca * Myoc
    in [mM]
dot(Myom) = kon_myomg * ion.Mg_i * (Bmax_myosin - Myoc - Myom) - koff_myomg * Myom
    in [mM]
dot(SLH_jn) = kon_slh * calcium.Ca_jn * (Bmax_SLhighj - SLH_jn) - koff_slh * SLH_jn
    in [mM]
dot(SLH_sl) = kon_slh * calcium.Ca_sl * (Bmax_SLhighsl - SLH_sl) - koff_slh * SLH_sl
    in [mM]
dot(SLL_jn) = kon_sll * calcium.Ca_jn * (Bmax_SLlowj - SLL_jn) - koff_sll * SLL_jn
    in [mM]
dot(SLL_sl) = kon_sll * calcium.Ca_sl * (Bmax_SLlowsl - SLL_sl) - koff_sll * SLL_sl
    in [mM]
dot(SRB) = kon_sr * calcium.Ca_i * (Bmax_SR - SRB) - koff_sr * SRB
    in [mM]
dot(TnCHc) = kon_tnchca * calcium.Ca_i * (Bmax_TnChigh - TnCHc - TnCHm) - koff_tnchca * TnCHc
    in [mM]
dot(TnCHm) = kon_tnchmg * ion.Mg_i * (Bmax_TnChigh - TnCHc - TnCHm) - koff_tnchmg * TnCHm
    in [mM]
dot(TnCL) = kon_tncl * calcium.Ca_i * (Bmax_TnClow - TnCL) - koff_tncl * TnCL
    in [mM]
koff_cam = 0.238
    in [mS/uF]
koff_myoca = 0.00046
    in [mS/uF]
koff_myomg = 5.7e-5
    in [mS/uF]
koff_slh = 0.03
    in [mS/uF]
koff_sll = 1.3
    in [mS/uF]
koff_sr = 0.06
    in [mS/uF]
koff_tnchca = 3.2e-5
    in [mS/uF]
koff_tnchmg = 0.00333
    in [mS/uF]
koff_tncl = (1 + 0.5 * cell.ISO) * 0.0196 [mS/uF]
    in [mS/uF]
kon_cam = 34
    in [1/mM/ms]
kon_myoca = 13.8
    in [1/mM/ms]
kon_myomg = 0.0157
    in [1/mM/ms]
kon_slh = 100
    in [1/mM/ms]
kon_sll = 100
    in [1/mM/ms]
kon_sr = 100
    in [1/mM/ms]
kon_tnchca = 2.37
    in [1/mM/ms]
kon_tnchmg = 0.003
    in [1/mM/ms]
kon_tncl = 32.7
    in [1/mM/ms]

[buffna]
Bmax_Na_jn = 7.561
    in [mM]
Bmax_Na_sl = 1.65
    in [mM]
dot(NaB_jn) = kon_na * sodium.Na_jn * (Bmax_Na_jn - NaB_jn) - koff_na * NaB_jn
    in [mM]
dot(NaB_sl) = kon_na * sodium.Na_sl * (Bmax_Na_sl - NaB_sl) - koff_na * NaB_sl
    in [mM]
koff_na = 0.001
    in [mS/uF]
kon_na = 0.0001
    in [1/mM/ms]

[calcium]
dot(Ca_i) = -ryr.J_serca * geom.Vsr / geom.Vmyo - buffca.J_CaB_cytosol + geom.JCa_slmyo / geom.Vmyo * (Ca_sl - Ca_i)
    in [mM]
dot(Ca_jn) = -ICa_tot_jn * cell.C / (geom.Vjn * 2 * phys.F) + geom.JCa_jnsl / geom.Vjn * (Ca_sl - Ca_jn) - buffca.J_CaB_jntion + ryr.J_SRCarel * geom.Vsr / geom.Vjn + ryr.J_SR_leak * geom.Vmyo / geom.Vjn
    in [mM]
dot(Ca_sl) = -ICa_tot_sl * cell.C / (geom.Vsl * 2 * phys.F) + geom.JCa_jnsl / geom.Vsl * (Ca_jn - Ca_sl) + geom.JCa_slmyo / geom.Vsl * (Ca_i - Ca_sl) - buffca.J_CaB_sl
    in [mM]
dot(Ca_sr) = ryr.J_serca - (ryr.J_SR_leak * geom.Vmyo / geom.Vsr + ryr.J_SRCarel) - dot(Csqn)
    in [mM]
dot(Csqn) = calcium_Csqn.kon_csqn * Ca_sr * (calcium_Csqn.Bmax_Csqn - Csqn) - calcium_Csqn.koff_csqn * Csqn
    in [mM]
ICa_tot_jn = ical.ICaL_Ca_jn + icab.ICaB_jn + ipca.IpCa_jn - 2 * inaca.INaCa_jn
    in [A/F]
ICa_tot_sl = ical.ICaL_Ca_sl + icab.ICaB_sl + ipca.IpCa_sl - 2 * inaca.INaCa_sl
    in [A/F]

[calcium_Csqn]
Bmax_Csqn = geom.Vmyo / geom.Vsr * 0.14 [mM]
    in [mM]
koff_csqn = 65
    in [mS/uF]
kon_csqn = 100
    in [1/mM/ms]

[cell]
AF = 0
    in [1]
C = 1.1e-10
    in [F]
ISO = 0
    in [1]
RA = 0
    in [1]

[engine]
time = 0 bind time
    in [ms]

[geom]
JCa_jnsl =  8.24130542277896849e-13
    in [m^3/s]
JCa_slmyo =  3.72425607984805052e-12
    in [m^3/s]
JNa_jnsl =  1.83127823220607955e-14
    in [m^3/s]
JNa_slmyo =  1.63862792221979433e-12
    in [m^3/s]
Vcell = pi * cell_radius ^ 2 * cell_length * 1e-15 [1 (1000000000000000)]
    in [L]
Vjn = 0.0539 * 0.01 * Vcell
    in [L]
Vmyo = 0.65 * Vcell
    in [L]
Vsl = 0.02 * Vcell
    in [L]
Vsr = 0.035 * Vcell
    in [L]
cell_length = 100
    in [um]
cell_radius = 10.25
    in [um]
pi =  3.14159265358979312
    in [1]

[icab]
ICaB = ICaB_jn + ICaB_sl
    in [A/F]
ICaB_jn = junc.Fjn * gCaB * (membrane.V - nernst.ECa_jn)
    in [A/F]
ICaB_sl = junc.Fsl * gCaB * (membrane.V - nernst.ECa_sl)
    in [A/F]
gCaB =  6.06430000000000033e-4
    in [mS/uF]

[ical]
ical_fact = 1
ICaL = ICaL_Ca + ICaL_K + ICaL_Na
    in [A/F]
ICaL_Ca = ICaL_Ca_jn + ICaL_Ca_sl
    in [A/F]
ICaL_Ca_jn = ical_fact * (1.0 - parameters.ICaL_block) * (junc.Fjn_CaL * ibarca_jn * d * f * (1 - fCaB_jn + fcaCaj) * Q10CaL ^ phys.Q * 0.45 [g*m^4/s^4/A^2 (100000)])
    in [A/F]
ICaL_Ca_sl = ical_fact * (1.0 - parameters.ICaL_block) * (junc.Fsl_CaL * ibarca_sl * d * f * (1 - fCaB_sl + fcaCaMSL) * Q10CaL ^ phys.Q * 0.45 [g*m^4/s^4/A^2 (100000)])
    in [A/F]
ICaL_K = ical_fact * (1.0 - parameters.ICaL_block) * (ibark * d * f * (junc.Fjn_CaL * (fcaCaj + (1 - fCaB_jn)) + junc.Fsl_CaL * (fcaCaMSL + (1 - fCaB_sl))) * Q10CaL ^ phys.Q * 0.45 [g*m^4/s^4/A^2 (100000)])
    in [A/F]
ICaL_Na = ICaL_Na_jn + ICaL_Na_sl
    in [A/F]
ICaL_Na_jn = ical_fact * (1.0 - parameters.ICaL_block) * (junc.Fjn_CaL * ibarna_jn * d * f * (1 - fCaB_jn + fcaCaj) * Q10CaL ^ phys.Q * 0.45 [g*m^4/s^4/A^2 (100000)])
    in [A/F]
ICaL_Na_sl = ical_fact * (1.0 - parameters.ICaL_block) * (junc.Fsl_CaL * ibarna_sl * d * f * (1 - fCaB_sl + fcaCaMSL) * Q10CaL ^ phys.Q * 0.45 [g*m^4/s^4/A^2 (100000)])
    in [A/F]
Q10CaL = 1.8
    in [1]
dot(d) = (ical_d.ical_d_inf - d) / ical_d.ical_d_tau
    in [1]
dot(f) = (ical_f.ical_f_inf - f) / ical_f.ical_f_tau
    in [1]
dot(fCaB_jn) = (1.7 [m^3/mol] * calcium.Ca_jn * (1 - fCaB_jn) - 0.0119 * fCaB_jn) * 1 [mS/uF]
    in [1]
dot(fCaB_sl) = (1.7 [m^3/mol] * calcium.Ca_sl * (1 - fCaB_sl) - 0.0119 * fCaB_sl) * 1 [mS/uF]
    in [1]
f_conducting = 1
    in [1]
fcaCaMSL = 0
    in [1]
fcaCaj = 0
    in [1]
ibarca_jn = pCa * 4 * (membrane.V * phys.F * phys.FRT) * (0.341 * calcium.Ca_jn * exp(2 * membrane.V * phys.FRT) - 0.341 * ion.Ca_o) / (exp(2 * membrane.V * phys.FRT) - 1) * f_conducting
    in [uA/cm^2]
ibarca_sl = pCa * 4 * (membrane.V * phys.F * phys.FRT) * (0.341 * calcium.Ca_sl * exp(2 * membrane.V * phys.FRT) - 0.341 * ion.Ca_o) / (exp(2 * membrane.V * phys.FRT) - 1) * f_conducting
    in [uA/cm^2]
ibark = pK * membrane.V * phys.F * phys.FRT * (0.75 * potassium.K_i * exp(membrane.V * phys.FRT) - 0.75 * ion.K_o) / (exp(membrane.V * phys.FRT) - 1) * f_conducting
    in [uA/cm^2]
ibarna_jn = pNa * membrane.V * phys.F * phys.FRT * (0.75 * sodium.Na_jn * exp(membrane.V * phys.FRT) - 0.75 * ion.Na_o) / (exp(membrane.V * phys.FRT) - 1) * f_conducting
    in [uA/cm^2]
ibarna_sl = pNa * membrane.V * phys.F * phys.FRT * (0.75 * sodium.Na_sl * exp(membrane.V * phys.FRT) - 0.75 * ion.Na_o) / (exp(membrane.V * phys.FRT) - 1) * f_conducting
    in [uA/cm^2]
pCa = (1 + 0.5 * cell.ISO) * (1 - 0.5 * cell.AF) * pCa_max
    in [cm/s]
pCa_max = 0.00027
    in [cm/s]
pK = (1 + 0.5 * cell.ISO) * (1 - 0.5 * cell.AF) * pK_max
    in [cm/s]
pK_max = 1.35e-7
    in [cm/s]
pNa = (1 + 0.5 * cell.ISO) * (1 - 0.5 * cell.AF) * pNa_max
    in [cm/s]
pNa_max = 7.5e-9
    in [cm/s]

[ical_d]
ical_d_inf = 1 / (1 + exp(-(membrane.V + 3 [mV] * cell.ISO + 9 [mV]) / 6 [mV]))
    in [1]
ical_d_tau = ical_d_inf * (1 - exp(-(membrane.V + 3 [mV] * cell.ISO + 9 [mV]) / 6 [mV])) / (0.035 [1/mV/ms] * (membrane.V + 3 [mV] * cell.ISO + 9 [mV]))
    in [ms]

[ical_f]
ical_f_inf = 1 / (1 + exp((membrane.V + 3 [mV] * cell.ISO + 30 [mV]) / 7 [mV])) + 0.2 / (1 + exp((50 [mV] - membrane.V - 3 [mV] * cell.ISO) / 20 [mV]))
    in [1]
ical_f_tau = 1 / (0.0197 [mS/uF] * exp(-(0.0337 [1/mV] * (membrane.V + 3 [mV] * cell.ISO + 25 [mV])) ^ 2) + 0.02 [mS/uF])
    in [ms]

[iclb]
IClB = gClB * (membrane.V - nernst.ECl)
    in [A/F]
gClB = 0.009
    in [mS/uF]

[iclca]
GClCa = 0.0548
    in [mS/uF]
IClCa = IClCa_jn + IClCa_sl
    in [A/F]
IClCa_jn = junc.Fjn * GClCa / (1 + KdClCa / calcium.Ca_jn) * (membrane.V - nernst.ECl)
    in [A/F]
IClCa_sl = junc.Fsl * GClCa / (1 + KdClCa / calcium.Ca_sl) * (membrane.V - nernst.ECl)
    in [A/F]
KdClCa = 0.1
    in [mM]

[ik1]
IK1 = (1.0 - parameters.IK1_block) * gK1 * ik1_inf * (membrane.V - nernst.EK)
    in [A/F]
gK1 = (1 + cell.AF) * sqrt(ion.K_o / 5.4 [mM]) * gK1_max
    in [mS/uF]
gK1_max = 0.0525
    in [mS/uF]
ik1_inf = ik1_ik1_inf.ik1_inf_a / (ik1_ik1_inf.ik1_inf_a + ik1_ik1_inf.ik1_inf_b)
    in [1]

[ik1_ik1_inf]
ik1_inf_a = 1 [mS/uF] * (1.02 / (1 + exp(0.2385 [1/mV] * (membrane.V - nernst.EK - 59.215 [mV]))))
    in [mS/uF]
ik1_inf_b = 1 [mS/uF] * ((0.49124 * exp(0.08032 [1/mV] * (membrane.V + 5.476 [mV] - nernst.EK)) + exp(0.06175 [1/mV] * (membrane.V - nernst.EK - 594.31 [mV]))) / (1 + exp(-0.5143 [1/mV] * (membrane.V - nernst.EK + 4.753 [mV]))))
    in [mS/uF]

[ikp]
IKp = IKp_jn + IKp_sl
    in [A/F]
IKp_jn = junc.Fjn * gKp * kp * (membrane.V - nernst.EK)
    in [A/F]
IKp_sl = junc.Fsl * gKp * kp * (membrane.V - nernst.EK)
    in [A/F]
gKp = 0.002
    in [mS/uF]
kp = 1 / (1 + exp(7.488 - membrane.V / 5.98 [mV]))
    in [1]

[ikr]
ikr_fact = 1
IKr = ikr_fact * (1.0 - parameters.IKr_block) * gKr * xr * rr * (membrane.V - nernst.EK)
    in [A/F]
gKr = gKr_max * sqrt(ion.K_o / 5.4 [mM])
    in [mS/uF]
gKr_max = 0.035
    in [mS/uF]
rr = 1 / (1 + exp((membrane.V + 74 [mV]) / 24 [mV]))
    in [1]
dot(xr) = (ikr_xr.ikr_xr_inf - xr) / ikr_xr.ikr_xr_tau
    in [1]

[ikr_xr]
ikr_xr_inf = 1 / (1 + exp(-(membrane.V + 10 [mV]) / 5 [mV]))
    in [1]
ikr_xr_tau = +550 [ms] / (1 + exp((-22 [mV] - membrane.V) / 9 [mV])) * 6 / (1 + exp((membrane.V + 11 [mV]) / 9 [mV])) + 230 [ms] / (1 + exp((membrane.V + 40 [mV]) / 20 [mV]))
    in [ms]

[iks]
EKs = 1 / phys.FRT * log((ion.K_o + pNaK * ion.Na_o) / (potassium.K_i + pNaK * sodium.Na_i))
    in [mV]
IKs = IKs_jn + IKs_sl
    in [A/F]
IKs_jn = (1.0 - parameters.IKs_block) * junc.Fjn * gKs_jn * xs ^ 2 * (membrane.V - EKs)
    in [A/F]
IKs_sl = (1.0 - parameters.IKs_block) * junc.Fsl * gKs_sl * xs ^ 2 * (membrane.V - EKs)
    in [A/F]
gKs_jn = (1 + cell.AF + 2 * cell.ISO) * gKs_max
    in [mS/uF]
gKs_max = 0.0035
    in [mS/uF]
gKs_sl = (1 + cell.AF + 2 * cell.ISO) * gKs_max
    in [mS/uF]
pNaK = 0.01833
    in [1]
dot(xs) = (iks_xs.iks_xs_inf - xs) / iks_xs.iks_xs_tau
    in [1]

[iks_xs]
iks_xs_inf = 1 / (1 + exp(-(membrane.V + 40 [mV] * cell.ISO + 3.8 [mV]) / 14.25 [mV]))
    in [1]
iks_xs_tau = 990.1 [ms] / (1 + exp(-(membrane.V + 40 [mV] * cell.ISO + 2.436 [mV]) / 14.12 [mV]))
    in [ms]

[ikur]
IKur = (1.0 - parameters.IKur_block) * gKur * ikur_r * s * (membrane.V - nernst.EK)
    in [A/F]
gKur = (1 - 0.5 * cell.AF) * (1 + 2 * cell.ISO) * (1 + 0.2 * cell.RA) * gKur_max
    in [mS/uF]
gKur_max = 0.045
    in [mS/uF]
dot(ikur_r) = (ikur_ikur_r.ikur_r_inf - ikur_r) / ikur_ikur_r.ikur_r_tau
    in [1]
dot(s) = (ikur_s.ikur_s_inf - s) / ikur_s.ikur_s_tau
    in [1]

[ikur_ikur_r]
ikur_r_inf = 1 / (1 + exp((membrane.V + 6 [mV]) / -8.6 [mV]))
    in [1]
ikur_r_tau = 9 [ms] / (1 + exp((membrane.V + 5 [mV]) / 12 [mV])) + 0.5 [ms]
    in [ms]

[ikur_s]
ikur_s_inf = 1 / (1 + exp((membrane.V + 7.5 [mV]) / 10 [mV]))
    in [1]
ikur_s_tau = 590 [ms] / (1 + exp((membrane.V + 60 [mV]) / 10 [mV])) + 3050 [ms]
    in [ms]

[ina]
INa = INa_jn + INa_sl
    in [A/F]
INa_jn = (1.0 - parameters.INa_block) * junc.Fjn * gNa * m ^ 3 * h * j * (membrane.V - nernst.ENa_jn)
    in [A/F]
INa_sl = (1.0 - parameters.INa_block) * junc.Fsl * gNa * m ^ 3 * h * j * (membrane.V - nernst.ENa_sl)
    in [A/F]
gNa = gNa_max * (1 - 0.1 * cell.AF)
    in [mS/uF]
gNa_max = 23
    in [mS/uF]
dot(h) = (ina_h.ina_h_inf - h) / ina_h.ina_h_tau
    in [1]
dot(j) = (ina_j.ina_j_inf - j) / ina_j.ina_j_tau
    in [1]
dot(m) = (ina_m.ina_m_inf - m) / ina_m.ina_m_tau
    in [1]

[ina_h]
ina_h_a = piecewise(membrane.V >= -40 [mV], 0, 0.057 * exp(-(membrane.V + 80 [mV]) / 6.8 [mV])) * 1 [mS/uF]
    in [mS/uF]
ina_h_b = piecewise(membrane.V >= -40 [mV], 0.77 / (0.13 * (1 + exp(-(membrane.V + 10.66 [mV]) / 11.1 [mV]))), 2.7 * exp(0.079 [1/mV] * membrane.V) + 3.1 * 10 ^ 5 * exp(0.3485 [1/mV] * membrane.V)) * 1 [mS/uF]
    in [mS/uF]
ina_h_inf = 1 / (1 + exp((membrane.V + 71.55 [mV]) / 7.43 [mV])) ^ 2
    in [1]
ina_h_tau = 1 / (ina_h_a + ina_h_b)
    in [ms]

[ina_j]
ina_j_a = piecewise(membrane.V >= -40 [mV], 0, (-2.5428 * 10 ^ 4 * exp(0.2444 [1/mV] * membrane.V) - 6.948 * 10 ^ (-6) * exp(-0.04391 [1/mV] * membrane.V)) * (membrane.V + 37.78 [mV]) / (1 + exp(0.311 [1/mV] * (membrane.V + 79.23 [mV]))) * 1 [1/mV]) * 1 [mS/uF]
    in [mS/uF]
ina_j_b = piecewise(membrane.V >= -40 [mV], 0.6 * exp(0.057 [1/mV] * membrane.V) / (1 + exp(-0.1 [1/mV] * (membrane.V + 32 [mV]))), 0.02424 * exp(-0.01052 [1/mV] * membrane.V) / (1 + exp(-0.1378 [1/mV] * (membrane.V + 40.14 [mV])))) * 1 [mS/uF]
    in [mS/uF]
ina_j_inf = 1 / (1 + exp((membrane.V + 71.55 [mV]) / 7.43 [mV])) ^ 2
    in [1]
ina_j_tau = 1 / (ina_j_a + ina_j_b)
    in [ms]

[ina_m]
ina_m_inf = 1 / (1 + exp(-(56.86 [mV] + membrane.V) / 9.03 [mV])) ^ 2
    in [1]
ina_m_tau = 0.1292 [ms] * exp(-((membrane.V + 45.79 [mV]) / 15.54 [mV]) ^ 2) + 0.06487 [ms] * exp(-((membrane.V - 4.823 [mV]) / 51.12 [mV]) ^ 2)
    in [ms]

[inab]
INaB = INaB_jn + INaB_sl
    in [A/F]
INaB_jn = junc.Fjn * gNaB * (membrane.V - nernst.ENa_jn)
    in [A/F]
INaB_sl = junc.Fsl * gNaB * (membrane.V - nernst.ENa_sl)
    in [A/F]
gNaB = 0.000597
    in [mS/uF]

[inaca]
INaCa = INaCa_jn + INaCa_sl
    in [A/F]
INaCa_jn = (1.0 - parameters.INCX_block) * (junc.Fjn * IbarNCX * Q10NCX ^ phys.Q * Ka_jn * (inaca_INaCa_jn.s1_jn - inaca_INaCa_jn.s2_jn) / inaca_INaCa_jn.s3_jn / (1 + ksat * exp((nu - 1) * membrane.V * phys.FRT)))
    in [A/F]
INaCa_sl = (1.0 - parameters.INCX_block) * (junc.Fsl * IbarNCX * Q10NCX ^ phys.Q * Ka_sl * (inaca_INaCa_sl.s1_sl - inaca_INaCa_sl.s2_sl) / inaca_INaCa_sl.s3_sl / (1 + ksat * exp((nu - 1) * membrane.V * phys.FRT)))
    in [A/F]
IbarNCX = (1 + 0.4 * cell.AF) * IbarNCX_max
    in [A/F]
IbarNCX_max = 3.15
    in [A/F]
Ka_jn = 1 / (1 + (Kdact / calcium.Ca_jn) ^ 2)
    in [1]
Ka_sl = 1 / (1 + (Kdact / calcium.Ca_sl) ^ 2)
    in [1]
Kdact = 0.000384
    in [mM]
KmCai = 0.00359
    in [mM]
KmCao = 1.3
    in [mM]
KmNai = 12.29
    in [mM]
KmNao = 87.5
    in [mM]
Q10NCX = 1.57
    in [1]
ksat = 0.27
    in [1]
nu = 0.35
    in [1]

[inaca_INaCa_jn]
s1_jn = exp(inaca.nu * membrane.V * phys.FRT) * sodium.Na_jn ^ 3 * ion.Ca_o
    in [mol^4/m^12]
s2_jn = exp((inaca.nu - 1) * membrane.V * phys.FRT) * ion.Na_o ^ 3 * calcium.Ca_jn
    in [mol^4/m^12]
s3_jn = inaca.KmCai * ion.Na_o ^ 3 * (1 + (sodium.Na_jn / inaca.KmNai) ^ 3) + inaca.KmNao ^ 3 * calcium.Ca_jn * (1 + calcium.Ca_jn / inaca.KmCai) + inaca.KmCao * sodium.Na_jn ^ 3 + sodium.Na_jn ^ 3 * ion.Ca_o + ion.Na_o ^ 3 * calcium.Ca_jn
    in [mol^4/m^12]

[inaca_INaCa_sl]
s1_sl = exp(inaca.nu * membrane.V * phys.FRT) * sodium.Na_sl ^ 3 * ion.Ca_o
    in [mol^4/m^12]
s2_sl = exp((inaca.nu - 1) * membrane.V * phys.FRT) * ion.Na_o ^ 3 * calcium.Ca_sl
    in [mol^4/m^12]
s3_sl = inaca.KmCai * ion.Na_o ^ 3 * (1 + (sodium.Na_sl / inaca.KmNai) ^ 3) + inaca.KmNao ^ 3 * calcium.Ca_sl * (1 + calcium.Ca_sl / inaca.KmCai) + inaca.KmCao * sodium.Na_sl ^ 3 + sodium.Na_sl ^ 3 * ion.Ca_o + ion.Na_o ^ 3 * calcium.Ca_sl
    in [mol^4/m^12]

[inak]
INaK = INaK_jn + INaK_sl
    in [A/F]
INaK_jn = (1.0 - parameters.INaK_block) * (junc.Fjn * IbarNaK * fnak * ion.K_o / (1 + (KmNaip / sodium.Na_jn) ^ 4) / (ion.K_o + KmKo))
    in [A/F]
INaK_sl = (1.0 - parameters.INaK_block) * (junc.Fsl * IbarNaK * fnak * ion.K_o / (1 + (KmNaip / sodium.Na_sl) ^ 4) / (ion.K_o + KmKo))
    in [A/F]
IbarNaK = 1.26
    in [A/F]
KmKo = 1.5
    in [mM]
KmNaip = 11 [mM] * (1 - 0.25 * cell.ISO)
    in [mM]
fnak = 1 / (1 + 0.1245 * exp(-0.1 * membrane.V * phys.FRT) + 0.0365 * sigma * exp(-membrane.V * phys.FRT))
    in [1]
sigma = (exp(ion.Na_o / 67.3 [mM]) - 1) / 7
    in [1]

[inal]
INaL = INaL_jn + INaL_sl
    in [A/F]
INaL_jn = (1.0 - parameters.INaL_block) * junc.Fjn * gNaL * ml ^ 3 * hl * (membrane.V - nernst.ENa_jn)
    in [A/F]
INaL_sl = (1.0 - parameters.INaL_block) * junc.Fsl * gNaL * ml ^ 3 * hl * (membrane.V - nernst.ENa_sl)
    in [A/F]
gNaL = gNaL_max * cell.AF
    in [mS/uF]
gNaL_max = 0.0025
    in [mS/uF]
dot(hl) = (inal_hl.inal_hl_inf - hl) / inal_hl.inal_hl_tau
    in [1]
dot(ml) = inal_ml.inal_ml_a * (1 - ml) - inal_ml.inal_ml_b * ml
    in [1]

[inal_hl]
inal_hl_inf = 1 / (1 + exp((membrane.V + 91 [mV]) / 6.1 [mV]))
    in [1]
inal_hl_tau = 600
    in [ms]

[inal_ml]
inal_ml_a = 0.32 [1/mV/ms] * (membrane.V + 47.13 [mV]) / (1 - exp(-0.1 [1/mV] * (membrane.V + 47.13 [mV])))
    in [mS/uF]
inal_ml_b = 0.08 [mS/uF] * exp(-membrane.V / 11 [mV])
    in [mS/uF]

[ion]
Ca_o = 1.8
    in [mM]
Cl_i = 15
    in [mM]
Cl_o = 150
    in [mM]
K_o = 5.4
    in [mM]
Mg_i = 1
    in [mM]
Na_o = 140
    in [mM]

[ipca]
IbarSLCaP = 0.0471
    in [A/F]
IpCa = IpCa_jn + IpCa_sl
    in [A/F]
IpCa_jn = junc.Fjn * Q10SLCaP ^ phys.Q * IbarSLCaP * ipca_IpCa_jn.ipca_IpCa_jn_a / (ipca_IpCa_jn.ipca_IpCa_jn_a + ipca_IpCa_jn.ipca_IpCa_jn_b)
    in [A/F]
IpCa_sl = junc.Fsl * Q10SLCaP ^ phys.Q * IbarSLCaP * ipca_IpCa_sl.ipca_IpCa_sl_a / (ipca_IpCa_sl.ipca_IpCa_sl_a + ipca_IpCa_sl.ipca_IpCa_sl_b)
    in [A/F]
KmPCa = 0.0005
    in [mM]
Q10SLCaP = 2.35
    in [1]

[ipca_IpCa_jn]
ipca_IpCa_jn_a = (calcium.Ca_jn * 1 [m^3/mol]) ^ 1.6
    in [1]
ipca_IpCa_jn_b = (ipca.KmPCa * 1 [m^3/mol]) ^ 1.6
    in [1]

[ipca_IpCa_sl]
ipca_IpCa_sl_a = (calcium.Ca_sl * 1 [m^3/mol]) ^ 1.6
    in [1]
ipca_IpCa_sl_b = (ipca.KmPCa * 1 [m^3/mol]) ^ 1.6
    in [1]

[ito]
Ito = (1.0 - parameters.Ito_block) * gto * x * y * (membrane.V - nernst.EK)
    in [A/F]
gto = (1 - 0.7 * cell.AF) * gto_max
    in [mS/uF]
gto_max = 0.165
    in [mS/uF]
dot(x) = (ito_x.ito_x_inf - x) / ito_x.ito_x_tau
    in [1]
dot(y) = (ito_y.ito_y_inf - y) / ito_y.ito_y_tau
    in [1]

[ito_x]
ito_x_inf = 1 / (1 + exp(-(membrane.V + 1 [mV]) / 11 [mV]))
    in [1]
ito_x_tau = 3.5 [ms] * exp(-(membrane.V / 30 [mV]) ^ 2) + 1.5 [ms]
    in [ms]

[ito_y]
ito_y_inf = 1 / (1 + exp((membrane.V + 40.5 [mV]) / 11.5 [mV]))
    in [1]
ito_y_tau = 25.635 [ms] * exp(-((membrane.V + 52.45 [mV]) / 15.8827 [mV]) ^ 2) + 24.14 [ms]
    in [ms]

[junc]
Fjn = 0.11
    in [1]
Fjn_CaL = 0.9
    in [1]
Fsl = 1 - Fjn
    in [1]
Fsl_CaL = 1 - Fjn_CaL
    in [1]

[membrane]
ICa_tot = calcium.ICa_tot_jn + calcium.ICa_tot_sl
    in [A/F]
ICl_tot = iclca.IClCa + iclb.IClB
    in [A/F]
INa_tot = sodium.INa_tot_jn + sodium.INa_tot_sl
    in [A/F]
I_tot = INa_tot + ICl_tot + ICa_tot + potassium.IK_tot
    in [A/F]
dot(V) = -(I_tot + stimulus.I_stim)
    in [mV]

[nernst]
ECa_jn = 1 / phys.FRT / 2 * log(ion.Ca_o / calcium.Ca_jn)
    in [mV]
ECa_sl = 1 / phys.FRT / 2 * log(ion.Ca_o / calcium.Ca_sl)
    in [mV]
ECl = 1 / phys.FRT * log(ion.Cl_i / ion.Cl_o)
    in [mV]
EK = 1 / phys.FRT * log(ion.K_o / potassium.K_i)
    in [mV]
ENa_jn = 1 / phys.FRT * log(ion.Na_o / sodium.Na_jn)
    in [mV]
ENa_sl = 1 / phys.FRT * log(ion.Na_o / sodium.Na_sl)
    in [mV]

[phys]
F = 96485
    in [C/mol]
FRT = F / R / T
    in [1/mV]
Q = (T - 310 [K]) / 10 [K]
    in [1]
R = 8314
    in [mJ/mol/K]
T = 310
    in [K]

[potassium]
IK_tot = ito.Ito + ikr.IKr + iks.IKs + ik1.IK1 - 2 * inak.INaK + ical.ICaL_K + ikp.IKp + ikur.IKur
    in [A/F]
dot(K_i) = 0 [mM/ms]
    in [mM]

[ryr]
J_SRCarel = ks * o * (calcium.Ca_sr - calcium.Ca_jn)
    in [mM/ms]
J_SR_leak = (1 + 0.25 * cell.AF) * (calcium.Ca_sr - calcium.Ca_jn) * J_SR_leak_max
    in [mM/ms]
J_SR_leak_max = 5.348e-6
    in [mS/uF]
J_serca = Q10SRCaP ^ phys.Q * Vmax_SRCaP * ((calcium.Ca_i / Kmf) ^ hillSRCaP - (calcium.Ca_sr / Kmr) ^ hillSRCaP) / (1 + (calcium.Ca_i / Kmf) ^ hillSRCaP + (calcium.Ca_sr / Kmr) ^ hillSRCaP)
    in [mM/ms]
Kmf = (2.5 - 1.25 * cell.ISO) * 0.000246 [mM]
    in [mM]
Kmr = 1.7
    in [mM]
MaxSR = 15
    in [1]
MinSR = 1
    in [1]
Q10SRCaP = 2.6
    in [1]
RI = 1 - ryr_r - o - i
    in [1]
Vmax_SRCaP = 0.0053114
    in [mM/ms]
ec50SR = 0.45
    in [mM]
hillSRCaP = 1.787
    in [1]
dot(i) = kiSRCa * calcium.Ca_jn * o - kim * i - (kom * i - koSRCa * calcium.Ca_jn ^ 2 * RI)
    in [1]
kCaSR = MaxSR - (MaxSR - MinSR) / (1 + (ec50SR / calcium.Ca_sr) ^ 2.5)
    in [1]
kiCa = 0.5
    in [1/mM/ms]
kiSRCa = kiCa * kCaSR
    in [1/mM/ms]
kim = 0.005
    in [mS/uF]
koCa = (10 + 20 * cell.AF + 10 * cell.ISO * (1 - cell.AF)) * 1 [1/mM^2/ms]
    in [1/mM^2/ms]
koSRCa = koCa / kCaSR
    in [1/mM^2/ms]
kom = 0.06
    in [mS/uF]
ks = 25
    in [mS/uF]
dot(o) = koSRCa * calcium.Ca_jn ^ 2 * ryr_r - kom * o - (kiSRCa * calcium.Ca_jn * o - kim * i)
    in [1]
dot(ryr_r) = kim * RI - kiSRCa * calcium.Ca_jn * ryr_r - (koSRCa * calcium.Ca_jn ^ 2 * ryr_r - kom * o)
    in [1]

[sodium]
INa_tot_jn = ina.INa_jn + inab.INaB_jn + 3 * inaca.INaCa_jn + 3 * inak.INaK_jn + ical.ICaL_Na_jn + inal.INaL_jn
    in [A/F]
INa_tot_sl = ina.INa_sl + inab.INaB_sl + 3 * inaca.INaCa_sl + 3 * inak.INaK_sl + ical.ICaL_Na_sl + inal.INaL_sl
    in [A/F]
dot(Na_i) = geom.JNa_slmyo / geom.Vmyo * (Na_sl - Na_i)
    in [mM]
dot(Na_jn) = -INa_tot_jn * cell.C / (geom.Vjn * phys.F) + geom.JNa_jnsl / geom.Vjn * (Na_sl - Na_jn) - dot(buffna.NaB_jn)
    in [mM]
dot(Na_sl) = -INa_tot_sl * cell.C / (geom.Vsl * phys.F) + geom.JNa_jnsl / geom.Vsl * (Na_jn - Na_sl) + geom.JNa_slmyo / geom.Vsl * (Na_i - Na_sl) - dot(buffna.NaB_sl)
    in [mM]

[stimulus]
#I_stim = pace * amplitude
I_stim = level * amplitude
    in [A/F]
amplitude = -12.5
    in [A/F]
#pace = piecewise(engine.time - stim_offset - stim_period * floor((engine.time - stim_offset) / stim_period) < stim_duration, 1, 0)
#    in [1]
stim_duration = 5
    in [ms]
stim_offset = 50
    in [ms]
stim_period = 1000
    in [ms]
level = 0 bind pace

[parameters]
INa_block = 0
ICaL_block = 0
Ito_block = 0
IK1_block = 0
IKr_block = 0
IKs_block = 0
IKAch_block = 0
IKur_block = 0
INaK_block = 0
INCX_block = 0
INaL_block = 0

[[protocol]]
# Level  Start    Length   Period   Multiplier
1.0      10.0    5.0      1000.0   0

[[script]]
import matplotlib.pyplot as pl
import myokit
import numpy as np
from scipy.signal import find_peaks

APD_combi = []
for xx in np.around(np.arange(1.0, -0.04, -0.05), decimals=2):
    print(xx)
    APD = []
    for yy in np.around(np.arange(1.30, 1.601, 0.01), decimals=2):
        print(yy)
        # Get model and protocol, create simulation
        m = get_model()
        #p = get_protocol()
        p=myokit.Protocol()
        p.schedule(1, 10.0, 5.0, 1000, 0)
        s = myokit.Simulation(m, p)
        #s.set_constant("parameters.INa_block", 0.5) #0) #-0.238436679601817) #0)
        #s.set_constant("parameters.Ito_block", -0.8) #0) #0.022750972202091) #0)
        #s.set_constant("parameters.ICaL_block", -0.5) #0) #-0.5) #0)
        #s.set_constant("parameters.IKur_block", 0.5) #0) #-1.20980871702709) #0)
        #s.set_constant("parameters.IKAch_block", 0)
        #s.set_constant("parameters.IKr_block", 0.5) #0) #-1.56881559203645) #0)
        #s.set_constant("parameters.IKs_block", 0) #0) #0.006916383100787) #0)
        #s.set_constant("parameters.IK1_block", 0) #0) #-0.013583091518072) #0)
        #s.set_constant("parameters.INCX_block", 0.5) #0) #-1.5) #0)
        #s.set_constant("parameters.INaK_block", 0.0035676) #0) #0.141757537786483) #0)
        #s.set_constant("parameters.INaL_block", 0)
        
        s.set_constant("parameters.INa_block", -0.238436679601817) #0)
        s.set_constant("parameters.Ito_block", 0.022750972202091) #0)
        s.set_constant("parameters.ICaL_block", -0.5) #0)
        s.set_constant("parameters.IKur_block", -1.20980871702709) #0)
        s.set_constant("parameters.IKAch_block", 0)
        s.set_constant("parameters.IKr_block", -1.56881559203645) #0)
        s.set_constant("parameters.IKs_block", 0.006916383100787) #0)
        s.set_constant("parameters.IK1_block", -0.013583091518072) #0)
        s.set_constant("parameters.INCX_block", -1.5) #0)
        s.set_constant("parameters.INaK_block", 0.141757537786483) #0)
        s.set_constant("parameters.INaL_block", 0)
        
        s.set_constant("ikr.ikr_fact", xx) #1.0) #0.7)
        s.set_constant("ical.ical_fact", yy) #1.6) #1.5) #1.4)
        
        s.pre(100*1000) #steady state at 1000x for perturbed ones
        s.set_tolerance(1e-8, 1e-8)
        # Run simulation
        d = s.run(1000, log_interval = 0.1)
        
        #np.savetxt("Grandi_APtrace_baseline.txt", np.c_[d['engine.time'], d['membrane.V'], d['calcium.Ca_i']], delimiter = ",")
        #np.savetxt("Grandi_APtrace_ical150pct_APD90.txt", np.c_[d['engine.time'], d['membrane.V'], d['calcium.Ca_i']], delimiter = ",")
        vt90_ctl = -65.48694937591185 #0.9*s.state()[m.get('membrane.V').indice()]
        apd90_ctl = d.apd(v='membrane.V', threshold = vt90_ctl)
        try:
            peaks, _ = find_peaks(d['membrane.V'][2000:], height=-50)
            print(peaks)
            if not peaks: #apd90_ctl['duration'][0] > 550:
                APD_class = 0
            else:
                APD_class = 1
            print("APD90 CTL = " + str(apd90_ctl['duration'][0]))
        except:
            APD_class = 1
            print("APD not detected")
        
        # Display the results
        pl.figure("AP")
        pl.subplot(2,1,1)
        pl.plot(d['engine.time'], d['membrane.V']) #, '-k')
        pl.subplot(2,1,2)
        pl.plot(d['engine.time'], d['calcium.Ca_i']) #, '-k')
        pl.show()
        
        APD.append(APD_class)
    print(APD)
    APD_combi.append(APD)
np.savetxt("EAD_YesNo_AP3_Grandi.txt", APD_combi, delimiter = ",")

